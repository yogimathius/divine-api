# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type YogaPose {
  poseId: ID!
  poseName: String!
  poseDescription: String!
  poseImagePath: String!
  posePoints: Float!
  achievementConditions: YogaPose!
}

type UserYogaPose {
  user_pose_id: Float!
  user: User!
  pose: YogaPose!
  completion_date: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""user """
type User {
  id: ID!
  username: String!
  password: String!
  online: Boolean!
  bio: String
  email: String
}

type AuthPayload {
  token: String!
  expiration: Float!
  user: User!
}

type Condition {
  id: ID!
  yogaPose: YogaPose!
  executionCount: Float!
}

type Achievement {
  achievementId: ID!
  achievementName: String!
  achievementDate: DateTime!
  achievementPoints: Float!
  conditions: Condition!
}

type Query {
  user(id: ID!): User!
  users(page: Int! = 1, limit: Int! = 10): [User!]!
  yogaPoses: [YogaPose!]!
  yogaPose(id: Int!): YogaPose!
  userYogaPoses(userId: ID!): [UserYogaPose!]!
  achievements: [Achievement!]!
  achievement(id: Int!): Achievement!
}

type Mutation {
  register(input: SignupCredentialsDto!): AuthPayload!
  login(input: AuthCredentialsDto!): AuthPayload!
  createUser(input: NewUserInput!): User!
  updateUser(id: ID!, updateUserInput: UpdateUserInput!): User!
  deleteUser(id: ID!): Boolean!
  createYogaPose(createYogaPoseInput: CreateYogaPoseInput!): YogaPose!
  updateYogaPose(id: Float!, input: UpdateYogaPoseInput!): YogaPose!
  deleteYogaPose(id: Int!): Boolean!
  createUserYogaPose(createUserYogaPoseInput: CreateUserYogaPoseInput!): UserYogaPose!
  deleteUserYogaPose(id: ID!): Boolean!
  createAchievement(createAchievementInput: CreateAchievementInput!): Achievement!
  updateAchievement(id: Float!, input: UpdateAchievementInput!): Achievement!
  deleteAchievement(id: Int!): Boolean!
}

input SignupCredentialsDto {
  username: String!
  password: String!
}

input AuthCredentialsDto {
  username: String!
  password: String!
}

input NewUserInput {
  username: String!
  password: String!
  bio: String
  email: String
}

input UpdateUserInput {
  username: String
  email: String
  password: String
  online: Boolean
  bio: String
}

input CreateYogaPoseInput {
  poseName: String!
  poseDescription: String!
  poseImagePath: String!
  posePoints: Int!
}

input UpdateYogaPoseInput {
  poseName: String
  poseDescription: String
  poseImagePath: String
  posePoints: Int
  poseId: Int!
}

input CreateUserYogaPoseInput {
  userId: ID!
  poseId: ID!
  completionDate: DateTime!
}

input CreateAchievementInput {
  achievementName: String!
  achievementDate: String!
  achievementPoints: Int!
  conditions: [ConditionInput!]!
}

input ConditionInput {
  poseName: String!
  executionCount: Int!
  achievementName: String!
}

input UpdateAchievementInput {
  achievementName: String
  achievementDate: String
  achievementPoints: Int
  conditions: [ConditionInput!]
  achievementId: Int!
}